#!/bin/bash

# Usage: ./Dockercommand <image_name> <container_name>

_DOCKER='docker'
_DOCKER_IMAGE=$1
_DOCKER_CONTAINER=$2

### Functions ###

docker_start() {
  docker_stop

  local _exited=$(docker ps -a -q -f status=exited)
  if [ ! -z $_exited ]; then
    docker rm --force $_exited > /dev/null 2>&1
  fi

  docker_process
}

docker_stop() {
  $_DOCKER stop --time=10 $_DOCKER_CONTAINER > /dev/null 2>&1 || true
}

docker_build() {
  local _cacheFlag=false
  if [[ "$@" == *"--no-cache"* ]]; then
    _cacheFlag=true
  fi

  docker_stop
  $_DOCKER rm $_DOCKER_CONTAINER > /dev/null 2>&1
  $_DOCKER build --quiet=false --no-cache=$_cacheFlag --force-rm=true --tag="$_DOCKER_IMAGE" .
}

docker_clean() {
  { # try
    # delete old containers
    docker ps -a | grep 'weeks ago' | awk '{print $1}' | xargs --no-run-if-empty docker rm
    # delete dangling volumes
    local _volumes=$(docker volume ls -q -f dangling=true)
    if [ ! -z "$_volumes" ]; then
      docker volume rm $_volumes
    fi
    # delete dandling images
    local _images=$(docker images -q -f dangling=true)
    if [ ! -z "$_images" ]; then
      docker rmi $_images
    fi
    # delete ALL images
    #docker rmi $(docker images -q) > /dev/null 2>&1
  } ||
  { # finally
     echo.
  }
}

docker_delete() {
  $_DOCKER rmi $_DOCKER_IMAGE
}

docker_commit() {
  $_DOCKER commit -m $(date +%Y-%m-%d~%H:%M:%S) $_DOCKER_CONTAINER $_DOCKER_IMAGE
}

docker_export() {
  docker_stop
  $_DOCKER export $_DOCKER_CONTAINER | gzip -c > $_DOCKER_CONTAINER.tgz
}

docker_import() {
  docker_stop
  $_DOCKER rm $_DOCKER_CONTAINER > /dev/null 2>&1
  $_DOCKER rmi $_DOCKER_IMAGE > /dev/null 2>&1
  gzip -dc "$_DOCKER_CONTAINER".tgz | $_DOCKER import - $_DOCKER_IMAGE
}

### Terminal Operations ###

if [[ "$@" == *"--start"* ]]; then
  echo "Start: $_DOCKER_IMAGE"
  docker_start
fi

if [[ "$@" == *"--delete"* ]]; then
  echo "Delete: $_DOCKER_IMAGE"
  docker_delete
fi

if [[ "$@" == *"--commit"* ]]; then
  echo "Commit: $_DOCKER_CONTAINER to $_DOCKER_IMAGE"
  docker_commit
fi

if [[ "$@" == *"--build"* ]]; then
  echo "Build: $_DOCKER_IMAGE"
  docker_build
fi

if [[ "$@" == *"--stop"* ]]; then
  echo "Stop: $_DOCKER_CONTAINER"
  docker_stop
fi

if [[ "$@" == *"--clean"* ]]; then
  docker_clean
fi

if [[ "$@" == *"--export"* ]]; then
  echo "Export: $_DOCKER_CONTAINER"
  docker_export
fi

if [[ "$@" == *"--import"* ]]; then
  echo "Import: $_DOCKER_IMAGE"
  docker_import
fi

if [[ "$@" == *"--help"* ]]; then
  echo -e "
Usage: option(s)

Options:
  --start
  --delete
  --clean
  --commit
  --build
  --stop
  --import
  --export
  --help
"
fi

